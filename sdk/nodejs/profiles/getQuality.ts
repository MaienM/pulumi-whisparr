// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Profiles -->Single Quality.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as whisparr from "@maienm/pulumi-whisparr";
 * import * as whisparr from "@pulumi/whisparr";
 *
 * const bluray = whisparr.Profiles.getQuality({
 *     name: "Bluray-2160p",
 * });
 * const webdl = whisparr.Profiles.getQuality({
 *     name: "WEBDL-2160p",
 * });
 * const webrip = whisparr.Profiles.getQuality({
 *     name: "WEBRip-2160p",
 * });
 * const example = new whisparr.profiles.QualityProfile("example", {
 *     name: "Example",
 *     upgradeAllowed: true,
 *     cutoff: 2000,
 *     language: data.whisparr_language.test,
 *     qualityGroups: [
 *         {
 *             id: 2000,
 *             name: "WEB 2160p",
 *             qualities: [
 *                 webdl,
 *                 webrip,
 *             ],
 *         },
 *         {
 *             qualities: [bluray],
 *         },
 *     ],
 * });
 * ```
 */
export function getQuality(args: GetQualityArgs, opts?: pulumi.InvokeOptions): Promise<GetQualityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("whisparr:Profiles/getQuality:getQuality", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getQuality.
 */
export interface GetQualityArgs {
    /**
     * Quality Name.
     */
    name: string;
}

/**
 * A collection of values returned by getQuality.
 */
export interface GetQualityResult {
    /**
     * Quality  ID.
     */
    readonly id: number;
    /**
     * Quality Name.
     */
    readonly name: string;
    /**
     * Quality Resolution.
     */
    readonly resolution: number;
    /**
     * Quality source.
     */
    readonly source: string;
}
/**
 * <!-- subcategory:Profiles -->Single Quality.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as whisparr from "@maienm/pulumi-whisparr";
 * import * as whisparr from "@pulumi/whisparr";
 *
 * const bluray = whisparr.Profiles.getQuality({
 *     name: "Bluray-2160p",
 * });
 * const webdl = whisparr.Profiles.getQuality({
 *     name: "WEBDL-2160p",
 * });
 * const webrip = whisparr.Profiles.getQuality({
 *     name: "WEBRip-2160p",
 * });
 * const example = new whisparr.profiles.QualityProfile("example", {
 *     name: "Example",
 *     upgradeAllowed: true,
 *     cutoff: 2000,
 *     language: data.whisparr_language.test,
 *     qualityGroups: [
 *         {
 *             id: 2000,
 *             name: "WEB 2160p",
 *             qualities: [
 *                 webdl,
 *                 webrip,
 *             ],
 *         },
 *         {
 *             qualities: [bluray],
 *         },
 *     ],
 * });
 * ```
 */
export function getQualityOutput(args: GetQualityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQualityResult> {
    return pulumi.output(args).apply((a: any) => getQuality(a, opts))
}

/**
 * A collection of arguments for invoking getQuality.
 */
export interface GetQualityOutputArgs {
    /**
     * Quality Name.
     */
    name: pulumi.Input<string>;
}
