// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Profiles -->Quality Definition resource.
 * For more information refer to [Quality Definition](https://wiki.servarr.com/whisparr/settings#quality-1) documentation.
 *
 * ## Import
 *
 * import using the API/UI ID
 *
 * ```sh
 *  $ pulumi import whisparr:Profiles/qualityDefinition:QualityDefinition example 10
 * ```
 */
export class QualityDefinition extends pulumi.CustomResource {
    /**
     * Get an existing QualityDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QualityDefinitionState, opts?: pulumi.CustomResourceOptions): QualityDefinition {
        return new QualityDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'whisparr:Profiles/qualityDefinition:QualityDefinition';

    /**
     * Returns true if the given object is an instance of QualityDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QualityDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QualityDefinition.__pulumiType;
    }

    /**
     * Maximum size MB/min.
     */
    public readonly maxSize!: pulumi.Output<number>;
    /**
     * Minimum size MB/min.
     */
    public readonly minSize!: pulumi.Output<number>;
    /**
     * Preferred size MB/min.
     */
    public readonly preferredSize!: pulumi.Output<number>;
    /**
     * Quality ID.
     */
    public /*out*/ readonly qualityId!: pulumi.Output<number>;
    /**
     * Quality Name.
     */
    public /*out*/ readonly qualityName!: pulumi.Output<string>;
    /**
     * Quality Resolution.
     */
    public /*out*/ readonly resolution!: pulumi.Output<number>;
    /**
     * Quality source.
     */
    public /*out*/ readonly source!: pulumi.Output<string>;
    /**
     * Quality Definition Title.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a QualityDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QualityDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QualityDefinitionArgs | QualityDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QualityDefinitionState | undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["minSize"] = state ? state.minSize : undefined;
            resourceInputs["preferredSize"] = state ? state.preferredSize : undefined;
            resourceInputs["qualityId"] = state ? state.qualityId : undefined;
            resourceInputs["qualityName"] = state ? state.qualityName : undefined;
            resourceInputs["resolution"] = state ? state.resolution : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as QualityDefinitionArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["minSize"] = args ? args.minSize : undefined;
            resourceInputs["preferredSize"] = args ? args.preferredSize : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["qualityId"] = undefined /*out*/;
            resourceInputs["qualityName"] = undefined /*out*/;
            resourceInputs["resolution"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QualityDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering QualityDefinition resources.
 */
export interface QualityDefinitionState {
    /**
     * Maximum size MB/min.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Minimum size MB/min.
     */
    minSize?: pulumi.Input<number>;
    /**
     * Preferred size MB/min.
     */
    preferredSize?: pulumi.Input<number>;
    /**
     * Quality ID.
     */
    qualityId?: pulumi.Input<number>;
    /**
     * Quality Name.
     */
    qualityName?: pulumi.Input<string>;
    /**
     * Quality Resolution.
     */
    resolution?: pulumi.Input<number>;
    /**
     * Quality source.
     */
    source?: pulumi.Input<string>;
    /**
     * Quality Definition Title.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QualityDefinition resource.
 */
export interface QualityDefinitionArgs {
    /**
     * Maximum size MB/min.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * Minimum size MB/min.
     */
    minSize?: pulumi.Input<number>;
    /**
     * Preferred size MB/min.
     */
    preferredSize?: pulumi.Input<number>;
    /**
     * Quality Definition Title.
     */
    title: pulumi.Input<string>;
}
