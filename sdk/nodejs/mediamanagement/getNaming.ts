// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Media Management -->Naming.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as whisparr from "@pulumi/whisparr";
 *
 * const example = whisparr.MediaManagement.getNaming({});
 * ```
 */
export function getNaming(opts?: pulumi.InvokeOptions): Promise<GetNamingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("whisparr:MediaManagement/getNaming:getNaming", {
    }, opts);
}

/**
 * A collection of values returned by getNaming.
 */
export interface GetNamingResult {
    /**
     * Change how Whisparr handles colon replacement. Valid values are: 'delete', 'dash', 'spaceDash', and 'spaceDashSpace'.
     */
    readonly colonReplacementFormat: string;
    /**
     * Delay Profile ID.
     */
    readonly id: number;
    /**
     * Include quality in file name.
     */
    readonly includeQuality: boolean;
    /**
     * Movie folder format.
     */
    readonly movieFolderFormat: string;
    /**
     * Whisparr will use the existing file name if false.
     */
    readonly renameMovies: boolean;
    /**
     * Replace illegal characters. They will be removed if false.
     */
    readonly replaceIllegalCharacters: boolean;
    /**
     * Replace spaces.
     */
    readonly replaceSpaces: boolean;
    /**
     * Standard movie formatss.
     */
    readonly standardMovieFormat: string;
}
