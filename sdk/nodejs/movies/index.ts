// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetMovieArgs, GetMovieResult, GetMovieOutputArgs } from "./getMovie";
export const getMovie: typeof import("./getMovie").getMovie = null as any;
export const getMovieOutput: typeof import("./getMovie").getMovieOutput = null as any;
utilities.lazyLoad(exports, ["getMovie","getMovieOutput"], () => require("./getMovie"));

export { GetMoviesResult } from "./getMovies";
export const getMovies: typeof import("./getMovies").getMovies = null as any;
utilities.lazyLoad(exports, ["getMovies"], () => require("./getMovies"));

export { MovieArgs, MovieState } from "./movie";
export type Movie = import("./movie").Movie;
export const Movie: typeof import("./movie").Movie = null as any;
utilities.lazyLoad(exports, ["Movie"], () => require("./movie"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "whisparr:Movies/movie:Movie":
                return new Movie(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("whisparr", "Movies/movie", _module)
